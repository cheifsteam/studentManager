<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.student.mapper.ProfessionMapper">

    <resultMap type="Profession" id="ProfessionResult">
        <result property="id"    column="id"    />
        <result property="professionId"    column="profession_id"    />
        <result property="professionName"    column="profession_name"    />
        <result property="professionDescription"    column="profession_description"    />
        <result property="departmentId"    column="department_id"    />
    </resultMap>
    <resultMap type="ProfessionVo" id="ProfessionVoResult">
        <result property="id"    column="id"    />
        <result property="professionId"    column="profession_id"    />
        <result property="professionName"    column="profession_name"    />
        <result property="professionDescription"    column="profession_description"    />
        <result property="departmentName"    column="department_name"    />
    </resultMap>

    <sql id="selectProfessionVo">
        select id, profession_id, profession_name, profession_description, department_id from sys_profession
    </sql>

    <select id="selectProfessionList" parameterType="Profession" resultMap="ProfessionResult">
        <include refid="selectProfessionVo"/>
        <where>
            <if test="id != null "> and id = #{id}</if>
            <if test="professionId != null "> and profession_id = #{professionId}</if>
            <if test="professionName != null  and professionName != ''"> and profession_name like concat('%', #{professionName}, '%')</if>
            <if test="professionDescription != null  and professionDescription != ''"> and profession_description = #{professionDescription}</if>
            <if test="departmentId != null "> and department_id = #{departmentId}</if>
        </where>
    </select>

    <select id="selectProfessionById" parameterType="Long" resultMap="ProfessionResult">
        <include refid="selectProfessionVo"/>
        where id = #{id}
    </select>
    <select id="selectProfessionByProfessionId" parameterType="Long" resultMap="ProfessionResult">
        <include refid="selectProfessionVo"/>
        where profession_id = #{professionId}
    </select>
    <select id="selectProfessionByDepartmentId" parameterType="Long" resultMap="ProfessionResult">
        <include refid="selectProfessionVo"/>
        where department_id = #{departmentId}
    </select>

    <insert id="insertProfession" parameterType="Profession">
        insert into sys_profession
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="professionId != null">profession_id,</if>
            <if test="professionName != null">profession_name,</if>
            <if test="professionDescription != null">profession_description,</if>
            <if test="departmentId != null">department_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="professionId != null">#{professionId},</if>
            <if test="professionName != null">#{professionName},</if>
            <if test="professionDescription != null">#{professionDescription},</if>
            <if test="departmentId != null">#{departmentId},</if>
        </trim>
    </insert>

    <update id="updateProfession" parameterType="Profession">
        update sys_profession
        <trim prefix="SET" suffixOverrides=",">
            <if test="professionId != null">profession_id = #{professionId},</if>
            <if test="professionName != null">profession_name = #{professionName},</if>
            <if test="professionDescription != null">profession_description = #{professionDescription},</if>
            <if test="departmentId != null">department_id = #{departmentId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteProfessionById" parameterType="Long">
        delete from sys_profession where id = #{id}
    </delete>

    <delete id="deleteProfessionByIds" parameterType="String">
        delete from sys_profession where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectProfessionVoList" parameterType="Profession" resultMap="ProfessionVoResult">
       select p.*,d.department_name  from sys_profession p join sys_department d on p.department_id=d.department_id
        <where>
            <if test="id != null "> and id = #{id}</if>
            <if test="professionId != null "> and profession_id = #{professionId}</if>
            <if test="professionName != null  and professionName != ''"> and profession_name like concat('%', #{professionName}, '%')</if>
            <if test="professionDescription != null  and professionDescription != ''"> and profession_description = #{professionDescription}</if>
            <if test="departmentId != null "> and p.department_id = #{departmentId}</if>
        </where>
    </select>
</mapper>